package keuangan;
import fungsi.WarnaTable;
import fungsi.batasInput;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import fungsi.var;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import simrskhanza.DlgPenanggungJawab;

public class DlgRBPaketBHP extends javax.swing.JDialog {
    private final DefaultTableModel tabMode;
    private sekuel Sequel=new sekuel();
    private validasi Valid=new validasi();
    private Jurnal jur=new Jurnal();
    private Connection koneksi=koneksiDB.condb();
    private PreparedStatement ps,psralanpr,psralandrpr,psralandr,psperiksalab,psranappr,
            psranapdrpr,psranapdr,psdetaillab,psperiksaradiologi;
    private ResultSet rs,rsralanpr,rsralandrpr,rsralandr,rsperiksalab,rsranappr,rsranapdrpr,
            rsranapdr,rsdetaillab,rsperiksaradiologi;

    /** Creates new form DlgProgramStudi
     * @param parent
     * @param modal */
    public DlgRBPaketBHP(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        Object[] row={"No.","Cara Bayar","Tindakan Medis","Jumlah","BHP Medis/Paket Obat"};
        tabMode=new DefaultTableModel(null,row){
              @Override public boolean isCellEditable(int rowIndex, int colIndex){return false;}
        };
        tbDokter.setModel(tabMode);

        tbDokter.setPreferredScrollableViewportSize(new Dimension(800,800));
        tbDokter.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        for (int m = 0; m < 5; m++) {
            TableColumn column = tbDokter.getColumnModel().getColumn(m);
            if(m==0){
                column.setPreferredWidth(35);
            }else if(m==1){
                column.setPreferredWidth(220);
            }else if(m==2){
                column.setPreferredWidth(450);
            }else if(m==3){
                column.setPreferredWidth(100);
            }else if(m==4){
                column.setPreferredWidth(150);
            }
        }
        tbDokter.setDefaultRenderer(Object.class, new WarnaTable());   
        
        kdbayar.setDocument(new batasInput((byte)5).getKata(kdbayar));
                
        penjab.addWindowListener(new WindowListener() {
            @Override
            public void windowOpened(WindowEvent e) {}
            @Override
            public void windowClosing(WindowEvent e) {}
            @Override
            public void windowClosed(WindowEvent e) {
                if(penjab.getTable().getSelectedRow()!= -1){
                    kdbayar.setText(penjab.getTable().getValueAt(penjab.getTable().getSelectedRow(),1).toString());
                    nmbayar.setText(penjab.getTable().getValueAt(penjab.getTable().getSelectedRow(),2).toString());
                    prosesCari();
                }  
                kdbayar.requestFocus();
            }
            @Override
            public void windowIconified(WindowEvent e) {}
            @Override
            public void windowDeiconified(WindowEvent e) {}
            @Override
            public void windowActivated(WindowEvent e) {penjab.emptTeks();}
            @Override
            public void windowDeactivated(WindowEvent e) {}
        });
        
        penjab.getTable().addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {}
            @Override
            public void keyPressed(KeyEvent e) {
                if(e.getKeyCode()==KeyEvent.VK_SPACE){
                    penjab.dispose();
                }                
            }
            @Override
            public void keyReleased(KeyEvent e) {}
        });   
     
    }
    private DlgPenanggungJawab penjab=new DlgPenanggungJawab(null,false);
    private int i=0,a=0;
    private double jm=0,totaljm=0,detaillab=0;

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        internalFrame1 = new widget.InternalFrame();
        scrollPane1 = new widget.ScrollPane();
        tbDokter = new widget.Table();
        panelisi4 = new widget.panelisi();
        label11 = new widget.Label();
        Tgl1 = new widget.Tanggal();
        label18 = new widget.Label();
        Tgl2 = new widget.Tanggal();
        label17 = new widget.Label();
        kdbayar = new widget.TextBox();
        nmbayar = new widget.TextBox();
        btnBangsal = new widget.Button();
        BtnCari = new widget.Button();
        panelisi1 = new widget.panelisi();
        chkRalan = new widget.CekBox();
        chkRanap = new widget.CekBox();
        chkLaborat = new widget.CekBox();
        chkRadiologi = new widget.CekBox();
        BtnAll = new widget.Button();
        BtnPrint = new widget.Button();
        BtnKeluar = new widget.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), "::[ Rekap Bulanan BHP Medis/Paket Obat ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(50, 70, 40))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        scrollPane1.setName("scrollPane1"); // NOI18N
        scrollPane1.setOpaque(true);

        tbDokter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbDokter.setToolTipText("");
        tbDokter.setName("tbDokter"); // NOI18N
        scrollPane1.setViewportView(tbDokter);

        internalFrame1.add(scrollPane1, java.awt.BorderLayout.CENTER);

        panelisi4.setName("panelisi4"); // NOI18N
        panelisi4.setPreferredSize(new java.awt.Dimension(100, 44));
        panelisi4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        label11.setText("Tgl.Tindakan :");
        label11.setName("label11"); // NOI18N
        label11.setPreferredSize(new java.awt.Dimension(85, 23));
        panelisi4.add(label11);

        Tgl1.setEditable(false);
        Tgl1.setDisplayFormat("dd-MM-yyyy");
        Tgl1.setName("Tgl1"); // NOI18N
        Tgl1.setPreferredSize(new java.awt.Dimension(100, 23));
        Tgl1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Tgl1KeyPressed(evt);
            }
        });
        panelisi4.add(Tgl1);

        label18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label18.setText("s.d.");
        label18.setName("label18"); // NOI18N
        label18.setPreferredSize(new java.awt.Dimension(30, 23));
        panelisi4.add(label18);

        Tgl2.setEditable(false);
        Tgl2.setDisplayFormat("dd-MM-yyyy");
        Tgl2.setName("Tgl2"); // NOI18N
        Tgl2.setPreferredSize(new java.awt.Dimension(100, 23));
        Tgl2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Tgl2KeyPressed(evt);
            }
        });
        panelisi4.add(Tgl2);

        label17.setText("Cara Bayar :");
        label17.setName("label17"); // NOI18N
        label17.setPreferredSize(new java.awt.Dimension(70, 23));
        panelisi4.add(label17);

        kdbayar.setName("kdbayar"); // NOI18N
        kdbayar.setPreferredSize(new java.awt.Dimension(70, 23));
        kdbayar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kdbayarKeyPressed(evt);
            }
        });
        panelisi4.add(kdbayar);

        nmbayar.setEditable(false);
        nmbayar.setName("nmbayar"); // NOI18N
        nmbayar.setPreferredSize(new java.awt.Dimension(203, 23));
        panelisi4.add(nmbayar);

        btnBangsal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/190.png"))); // NOI18N
        btnBangsal.setMnemonic('3');
        btnBangsal.setToolTipText("Alt+3");
        btnBangsal.setName("btnBangsal"); // NOI18N
        btnBangsal.setPreferredSize(new java.awt.Dimension(28, 23));
        btnBangsal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBangsalActionPerformed(evt);
            }
        });
        btnBangsal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnBangsalKeyPressed(evt);
            }
        });
        panelisi4.add(btnBangsal);

        BtnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        BtnCari.setMnemonic('2');
        BtnCari.setToolTipText("Alt+2");
        BtnCari.setName("BtnCari"); // NOI18N
        BtnCari.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCariActionPerformed(evt);
            }
        });
        BtnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnCariKeyPressed(evt);
            }
        });
        panelisi4.add(BtnCari);

        internalFrame1.add(panelisi4, java.awt.BorderLayout.PAGE_START);

        panelisi1.setName("panelisi1"); // NOI18N
        panelisi1.setPreferredSize(new java.awt.Dimension(100, 56));
        panelisi1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        chkRalan.setSelected(true);
        chkRalan.setText("Ralan");
        chkRalan.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        chkRalan.setName("chkRalan"); // NOI18N
        chkRalan.setOpaque(false);
        chkRalan.setPreferredSize(new java.awt.Dimension(110, 30));
        chkRalan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRalanActionPerformed(evt);
            }
        });
        panelisi1.add(chkRalan);

        chkRanap.setSelected(true);
        chkRanap.setText("Ranap");
        chkRanap.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        chkRanap.setName("chkRanap"); // NOI18N
        chkRanap.setOpaque(false);
        chkRanap.setPreferredSize(new java.awt.Dimension(110, 30));
        chkRanap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRanapActionPerformed(evt);
            }
        });
        panelisi1.add(chkRanap);

        chkLaborat.setSelected(true);
        chkLaborat.setText("Laboratorium");
        chkLaborat.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        chkLaborat.setName("chkLaborat"); // NOI18N
        chkLaborat.setOpaque(false);
        chkLaborat.setPreferredSize(new java.awt.Dimension(110, 30));
        chkLaborat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkLaboratActionPerformed(evt);
            }
        });
        panelisi1.add(chkLaborat);

        chkRadiologi.setSelected(true);
        chkRadiologi.setText("Radiologi");
        chkRadiologi.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        chkRadiologi.setName("chkRadiologi"); // NOI18N
        chkRadiologi.setOpaque(false);
        chkRadiologi.setPreferredSize(new java.awt.Dimension(110, 30));
        chkRadiologi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRadiologiActionPerformed(evt);
            }
        });
        panelisi1.add(chkRadiologi);

        BtnAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Search-16x16.png"))); // NOI18N
        BtnAll.setMnemonic('M');
        BtnAll.setText("Semua");
        BtnAll.setToolTipText("Alt+M");
        BtnAll.setName("BtnAll"); // NOI18N
        BtnAll.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAllActionPerformed(evt);
            }
        });
        BtnAll.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnAllKeyPressed(evt);
            }
        });
        panelisi1.add(BtnAll);

        BtnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/b_print.png"))); // NOI18N
        BtnPrint.setMnemonic('T');
        BtnPrint.setText("Cetak");
        BtnPrint.setToolTipText("Alt+T");
        BtnPrint.setName("BtnPrint"); // NOI18N
        BtnPrint.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPrintActionPerformed(evt);
            }
        });
        BtnPrint.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnPrintKeyPressed(evt);
            }
        });
        panelisi1.add(BtnPrint);

        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setText("Keluar");
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelisi1.add(BtnKeluar);

        internalFrame1.add(panelisi1, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
/*
private void KdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TKdKeyPressed
    Valid.pindah(evt,BtnCari,Nm);
}//GEN-LAST:event_TKdKeyPressed
*/

    private void BtnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPrintActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if(tabMode.getRowCount()==0){
            JOptionPane.showMessageDialog(null,"Maaf, data sudah habis. Tidak ada data yang bisa anda print...!!!!");
            //TCari.requestFocus();
        }else if(tabMode.getRowCount()!=0){
            Sequel.AutoComitFalse();
            Sequel.queryu("delete from temporary");
            int row=tabMode.getRowCount();
            for(int r=0;r<row;r++){  
                Sequel.menyimpan("temporary","'0','"+
                                tabMode.getValueAt(r,0).toString().replaceAll("'","`") +"','"+
                                tabMode.getValueAt(r,1).toString().replaceAll("'","`")+"','"+
                                tabMode.getValueAt(r,2).toString().replaceAll("'","`")+"','"+
                                tabMode.getValueAt(r,3).toString().replaceAll("'","`")+"','"+
                                tabMode.getValueAt(r,4).toString().replaceAll("'","`")+"','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''","Rekap Harian BulananDokter"); 
            }
            Sequel.AutoComitTrue();
            Map<String, Object> param = new HashMap<>();
                param.put("namars",var.getnamars());
                param.put("alamatrs",var.getalamatrs());
                param.put("kotars",var.getkabupatenrs());
                param.put("propinsirs",var.getpropinsirs());
                param.put("kontakrs",var.getkontakrs());
                param.put("emailrs",var.getemailrs());   
                param.put("logo",Sequel.cariGambar("select logo from setting")); 
            Valid.MyReport("rptRBPaketBHP.jrxml","report","[ Rekap Bulanan BHP Medis/Paket BHP ]",
                "select no, temp1, temp2, temp3, temp4, temp5, temp6, temp7, temp8, temp9, temp10, temp11, temp12, temp13, temp14 from temporary order by no asc",param);
        }
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_BtnPrintActionPerformed

    private void BtnPrintKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnPrintKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnPrintActionPerformed(null);
        }else{
            Valid.pindah(evt,BtnAll,BtnKeluar);
        }
    }//GEN-LAST:event_BtnPrintKeyPressed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            dispose();
        }else{Valid.pindah(evt,BtnPrint,Tgl1);}
    }//GEN-LAST:event_BtnKeluarKeyPressed

    private void kdbayarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kdbayarKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_PAGE_DOWN){
            Sequel.cariIsi("select png_jawab from penjab where kd_pj=?", nmbayar,kdbayar.getText()); 
        }else if(evt.getKeyCode()==KeyEvent.VK_PAGE_UP){
            Sequel.cariIsi("select png_jawab from penjab where kd_pj=?", nmbayar,kdbayar.getText()); 
            Tgl2.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Sequel.cariIsi("select png_jawab from penjab where kd_pj=?", nmbayar,kdbayar.getText()); 
            BtnAll.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_UP){
            btnBangsalActionPerformed(null);
        }
    }//GEN-LAST:event_kdbayarKeyPressed

    private void BtnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAllActionPerformed
        //TCari.setText("");
        kdbayar.setText("");
        nmbayar.setText("");
        prosesCari();
    }//GEN-LAST:event_BtnAllActionPerformed

    private void BtnAllKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnAllKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnAllActionPerformed(null);
        }else{
            Valid.pindah(evt, kdbayar, BtnPrint);
        }
    }//GEN-LAST:event_BtnAllKeyPressed

private void btnBangsalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBangsalActionPerformed
        penjab.isCek();       
        penjab.setSize(internalFrame1.getWidth()-50,internalFrame1.getHeight()-50);
        penjab.setLocationRelativeTo(internalFrame1);
        penjab.setAlwaysOnTop(false);
        penjab.setVisible(true);
}//GEN-LAST:event_btnBangsalActionPerformed

private void btnBangsalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnBangsalKeyPressed
   //Valid.pindah(evt,DTPCari2,TCari);
}//GEN-LAST:event_btnBangsalKeyPressed

private void BtnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCariActionPerformed
        prosesCari();
}//GEN-LAST:event_BtnCariActionPerformed

private void BtnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnCariActionPerformed(null);
        }else{
            Valid.pindah(evt, kdbayar, BtnAll);
        }
}//GEN-LAST:event_BtnCariKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Tgl1.requestFocus();
        prosesCari();
    }//GEN-LAST:event_formWindowOpened

    private void Tgl1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Tgl1KeyPressed
        Valid.pindah(evt, BtnKeluar,Tgl2);
    }//GEN-LAST:event_Tgl1KeyPressed

    private void Tgl2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Tgl2KeyPressed
        Valid.pindah(evt, Tgl1,kdbayar);
    }//GEN-LAST:event_Tgl2KeyPressed

    private void chkRanapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRanapActionPerformed
        prosesCari();
    }//GEN-LAST:event_chkRanapActionPerformed

    private void chkLaboratActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkLaboratActionPerformed
        prosesCari();
    }//GEN-LAST:event_chkLaboratActionPerformed

    private void chkRadiologiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRadiologiActionPerformed
        prosesCari();
    }//GEN-LAST:event_chkRadiologiActionPerformed

    private void chkRalanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRalanActionPerformed
        prosesCari();
    }//GEN-LAST:event_chkRalanActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            DlgRBPaketBHP dialog = new DlgRBPaketBHP(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnAll;
    private widget.Button BtnCari;
    private widget.Button BtnKeluar;
    private widget.Button BtnPrint;
    private widget.Tanggal Tgl1;
    private widget.Tanggal Tgl2;
    private widget.Button btnBangsal;
    private widget.CekBox chkLaborat;
    private widget.CekBox chkRadiologi;
    private widget.CekBox chkRalan;
    private widget.CekBox chkRanap;
    private widget.InternalFrame internalFrame1;
    private widget.TextBox kdbayar;
    private widget.Label label11;
    private widget.Label label17;
    private widget.Label label18;
    private widget.TextBox nmbayar;
    private widget.panelisi panelisi1;
    private widget.panelisi panelisi4;
    private widget.ScrollPane scrollPane1;
    private widget.Table tbDokter;
    // End of variables declaration//GEN-END:variables

    private void prosesCari() {
       Valid.tabelKosong(tabMode);      
       try{      
           ps=koneksi.prepareStatement("select kd_pj,png_jawab from penjab where kd_pj like ? order by png_jawab");
           try {
                ps.setString(1,"%"+kdbayar.getText()+"%");
                rs=ps.executeQuery();
                i=1;
                totaljm=0;
                while(rs.next()){
                   tabMode.addRow(new Object[]{""+i+".",rs.getString("png_jawab"),"","",""});   
                   jm=0;
                   a=0;
                   //rawat jalan   
                   if(chkRalan.isSelected()==true){
                        psralanpr=koneksi.prepareStatement(
                            "select jns_perawatan.nm_perawatan,rawat_jl_pr.bhp,"+
                            "count(rawat_jl_pr.kd_jenis_prw) as jml,"+
                            "sum(rawat_jl_pr.bhp) as total "+
                            "from reg_periksa inner join jns_perawatan inner join rawat_jl_pr "+
                            "on rawat_jl_pr.no_rawat=reg_periksa.no_rawat "+
                            "and rawat_jl_pr.kd_jenis_prw=jns_perawatan.kd_jenis_prw "+
                            "where reg_periksa.tgl_registrasi between ? and ? and reg_periksa.kd_pj like ? and rawat_jl_pr.bhp>0 "+
                            "group by rawat_jl_pr.kd_jenis_prw order by jns_perawatan.nm_perawatan");
                        psralandrpr=koneksi.prepareStatement("select jns_perawatan.nm_perawatan,rawat_jl_drpr.bhp,"+
                            "count(rawat_jl_drpr.kd_jenis_prw) as jml,"+
                            "sum(rawat_jl_drpr.bhp) as total "+
                            "from reg_periksa inner join jns_perawatan inner join rawat_jl_drpr "+
                            "on rawat_jl_drpr.no_rawat=reg_periksa.no_rawat "+
                            "and rawat_jl_drpr.kd_jenis_prw=jns_perawatan.kd_jenis_prw "+
                            "where reg_periksa.tgl_registrasi between ? and ? and reg_periksa.kd_pj like ? and rawat_jl_drpr.bhp>0 "+
                            "group by rawat_jl_drpr.kd_jenis_prw order by jns_perawatan.nm_perawatan");
                        psralandr=koneksi.prepareStatement("select jns_perawatan.nm_perawatan,rawat_jl_dr.bhp,"+
                            "count(rawat_jl_dr.kd_jenis_prw) as jml,"+
                            "sum(rawat_jl_dr.bhp) as total "+
                            "from reg_periksa inner join jns_perawatan inner join rawat_jl_dr "+
                            "on rawat_jl_dr.no_rawat=reg_periksa.no_rawat "+
                            "and rawat_jl_dr.kd_jenis_prw=jns_perawatan.kd_jenis_prw "+
                            "where reg_periksa.tgl_registrasi between ? and ? and reg_periksa.kd_pj like ? and rawat_jl_dr.bhp>0 "+
                            "group by rawat_jl_dr.kd_jenis_prw order by jns_perawatan.nm_perawatan");
                        try {
                            psralanpr.setString(1,Valid.SetTgl(Tgl1.getSelectedItem()+""));
                            psralanpr.setString(2,Valid.SetTgl(Tgl2.getSelectedItem()+""));
                            psralanpr.setString(3,rs.getString("kd_pj"));
                            rsralanpr=psralanpr.executeQuery();

                            psralandrpr.setString(1,Valid.SetTgl(Tgl1.getSelectedItem()+""));
                            psralandrpr.setString(2,Valid.SetTgl(Tgl2.getSelectedItem()+""));
                            psralandrpr.setString(3,rs.getString("kd_pj"));
                            rsralandrpr=psralandrpr.executeQuery();
                            
                            psralandr.setString(1,Valid.SetTgl(Tgl1.getSelectedItem()+""));
                            psralandr.setString(2,Valid.SetTgl(Tgl2.getSelectedItem()+""));
                            psralandr.setString(3,rs.getString("kd_pj"));
                            rsralandr=psralandr.executeQuery();

                            if(rsralanpr.next()||rsralandrpr.next()||rsralandr.next()){ 
                                a++;
                                tabMode.addRow(new Object[]{"","",a+". Rawat Jalan","",""});   
                            }

                            rsralanpr.beforeFirst();
                            while(rsralanpr.next()){                    
                                tabMode.addRow(new Object[]{
                                    "","","     "+rsralanpr.getString("nm_perawatan"),
                                    rsralanpr.getString("jml"),Valid.SetAngka(rsralanpr.getDouble("total"))
                                });        
                                jm=jm+rsralanpr.getDouble("total");
                            }

                            rsralandr.beforeFirst();
                            while(rsralandr.next()){                    
                                tabMode.addRow(new Object[]{
                                    "","","     "+rsralandr.getString("nm_perawatan"),
                                    rsralandr.getString("jml"),Valid.SetAngka(rsralandr.getDouble("total"))
                                });        
                                jm=jm+rsralandr.getDouble("total");
                            }
                            
                            rsralandrpr.beforeFirst();
                            while(rsralandrpr.next()){                    
                                tabMode.addRow(new Object[]{
                                    "","","     "+rsralandrpr.getString("nm_perawatan"),
                                    rsralandrpr.getString("jml"),Valid.SetAngka(rsralandrpr.getDouble("total"))
                                });        
                                jm=jm+rsralandrpr.getDouble("total");
                            }
                        } catch (Exception e) {
                            System.out.println("Notifikasi : "+e);
                        } finally{
                            if(rsralanpr!=null){
                                rsralanpr.close();
                            }
                            if(rsralandrpr!=null){
                                rsralandrpr.close();
                            }
                            if(rsralandr!=null){
                                rsralandr.close();
                            }
                            if(psralanpr!=null){
                                psralanpr.close();
                            }
                            if(psralandrpr!=null){
                                psralandrpr.close();
                            }
                            if(psralandr!=null){
                                psralandr.close();
                            }
                        }
                   }
                   
                   //rawat inap               
                   if(chkRanap.isSelected()==true){
                        psranappr=koneksi.prepareStatement("select jns_perawatan_inap.nm_perawatan,rawat_inap_pr.bhp,"+
                                "count(rawat_inap_pr.kd_jenis_prw) as jml, " +
                                "sum(rawat_inap_pr.bhp) as total "+
                                "from jns_perawatan_inap inner join rawat_inap_pr inner join reg_periksa "+
                                "on rawat_inap_pr.no_rawat=reg_periksa.no_rawat and "+
                                "rawat_inap_pr.kd_jenis_prw=jns_perawatan_inap.kd_jenis_prw "+
                                "where rawat_inap_pr.tgl_perawatan between ? and ? and reg_periksa.kd_pj like ? "+
                                "and rawat_inap_pr.bhp>0 "+
                                "group by rawat_inap_pr.kd_jenis_prw order by jns_perawatan_inap.nm_perawatan  ");
                        psranapdrpr=koneksi.prepareStatement("select jns_perawatan_inap.nm_perawatan,rawat_inap_drpr.bhp,"+
                                "count(rawat_inap_drpr.kd_jenis_prw) as jml, " +
                                "sum(rawat_inap_drpr.bhp) as total "+
                                "from jns_perawatan_inap inner join rawat_inap_drpr inner join reg_periksa "+
                                "on rawat_inap_drpr.no_rawat=reg_periksa.no_rawat and "+
                                "rawat_inap_drpr.kd_jenis_prw=jns_perawatan_inap.kd_jenis_prw "+
                                "where rawat_inap_drpr.tgl_perawatan between ? and ? and reg_periksa.kd_pj like ? "+
                                "and rawat_inap_drpr.bhp>0 "+
                                "group by rawat_inap_drpr.kd_jenis_prw order by jns_perawatan_inap.nm_perawatan  ");
                        psranapdr=koneksi.prepareStatement("select jns_perawatan_inap.nm_perawatan,rawat_inap_dr.bhp,"+
                                "count(rawat_inap_dr.kd_jenis_prw) as jml, " +
                                "sum(rawat_inap_dr.bhp) as total "+
                                "from jns_perawatan_inap inner join rawat_inap_dr inner join reg_periksa "+
                                "on rawat_inap_dr.no_rawat=reg_periksa.no_rawat and "+
                                "rawat_inap_dr.kd_jenis_prw=jns_perawatan_inap.kd_jenis_prw "+
                                "where rawat_inap_dr.tgl_perawatan between ? and ? and reg_periksa.kd_pj like ? "+
                                "and rawat_inap_dr.bhp>0 "+
                                "group by rawat_inap_dr.kd_jenis_prw order by jns_perawatan_inap.nm_perawatan  ");
                        try {
                            psranappr.setString(1,Valid.SetTgl(Tgl1.getSelectedItem()+""));
                            psranappr.setString(2,Valid.SetTgl(Tgl2.getSelectedItem()+""));
                            psranappr.setString(3,rs.getString("kd_pj"));
                            rsranappr=psranappr.executeQuery();   

                            psranapdrpr.setString(1,Valid.SetTgl(Tgl1.getSelectedItem()+""));
                            psranapdrpr.setString(2,Valid.SetTgl(Tgl2.getSelectedItem()+""));
                            psranapdrpr.setString(3,rs.getString("kd_pj"));
                            rsranapdrpr=psranapdrpr.executeQuery();
                            
                            psranapdr.setString(1,Valid.SetTgl(Tgl1.getSelectedItem()+""));
                            psranapdr.setString(2,Valid.SetTgl(Tgl2.getSelectedItem()+""));
                            psranapdr.setString(3,rs.getString("kd_pj"));
                            rsranapdr=psranapdr.executeQuery();
                            if((rsranapdrpr.next())||(rsranappr.next())||(rsranapdr.next())){
                                a++;
                                tabMode.addRow(new Object[]{"","",a+". Rawat Inap ","","",""}); 
                            }
                            
                            rsranappr.beforeFirst();
                            while(rsranappr.next()){
                                tabMode.addRow(new Object[]{
                                    "","","     "+rsranappr.getString("nm_perawatan"),
                                    rsranappr.getString("jml"),Valid.SetAngka(rsranappr.getDouble("total"))
                                });  
                                jm=jm+rsranappr.getDouble("total");
                            }

                            rsranapdr.beforeFirst();
                            while(rsranapdr.next()){
                                tabMode.addRow(new Object[]{
                                    "","","     "+rsranapdr.getString("nm_perawatan"),
                                    rsranapdr.getString("jml"),Valid.SetAngka(rsranapdr.getDouble("total"))
                                });  
                                jm=jm+rsranapdr.getDouble("total");
                            }
                            
                            rsranapdrpr.beforeFirst();
                            while(rsranapdrpr.next()){
                                tabMode.addRow(new Object[]{
                                    "","","     "+rsranapdrpr.getString("nm_perawatan"),
                                    rsranapdrpr.getString("jml"),Valid.SetAngka(rsranapdrpr.getDouble("total"))
                                });  
                                jm=jm+rsranapdrpr.getDouble("total");
                            }
                        } catch (Exception e) {
                            System.out.println("Notifikasi : "+e);
                        } finally{
                            if(rsranappr!=null){
                                rsranappr.close();
                            }
                            if(rsranapdrpr!=null){
                                rsranapdrpr.close();
                            }
                            if(rsranapdr!=null){
                                rsranapdr.close();
                            }
                            if(psranappr!=null){
                                psranappr.close();
                            }
                            if(psranapdrpr!=null){
                                psranapdrpr.close();
                            }
                            if(psranapdr!=null){
                                psranapdr.close();
                            }
                        }
                   }
                    
                   if(chkLaborat.isSelected()==true){
                        psperiksalab=koneksi.prepareStatement("select jns_perawatan_lab.nm_perawatan,periksa_lab.bhp,"+
                            "count(periksa_lab.kd_jenis_prw) as jml, " +
                            "sum(periksa_lab.bhp) as total, "+
                            "periksa_lab.kd_jenis_prw from jns_perawatan_lab inner join periksa_lab inner join reg_periksa "+
                            "on periksa_lab.no_rawat=reg_periksa.no_rawat and periksa_lab.kd_jenis_prw=jns_perawatan_lab.kd_jenis_prw "+
                            "where periksa_lab.tgl_periksa between ? and ? and reg_periksa.kd_pj=? "+
                            "group by periksa_lab.kd_jenis_prw order by jns_perawatan_lab.nm_perawatan  ");
                        try {
                            psperiksalab.setString(1,Valid.SetTgl(Tgl1.getSelectedItem()+""));
                            psperiksalab.setString(2,Valid.SetTgl(Tgl2.getSelectedItem()+""));
                            psperiksalab.setString(3,rs.getString("kd_pj"));
                            rsperiksalab=psperiksalab.executeQuery();
                            if(rsperiksalab.next()){
                                a++;
                                 tabMode.addRow(new Object[]{"","",a+". Periksa Lab ","",""}); 
                            }
                            rsperiksalab.beforeFirst();
                            while(rsperiksalab.next()){ 
                                detaillab=0;
                                psdetaillab=koneksi.prepareStatement(
                                    "select sum(detail_periksa_lab.bhp) as total from "+
                                    "detail_periksa_lab inner join jns_perawatan_lab inner join reg_periksa inner join "+
                                    "template_laboratorium inner join periksa_lab on periksa_lab.no_rawat=detail_periksa_lab.no_rawat "+
                                    "and periksa_lab.kd_jenis_prw=detail_periksa_lab.kd_jenis_prw and "+
                                    "periksa_lab.tgl_periksa=detail_periksa_lab.tgl_periksa "+
                                    "and periksa_lab.jam=detail_periksa_lab.jam and periksa_lab.no_rawat=reg_periksa.no_rawat and "+
                                    "jns_perawatan_lab.kd_jenis_prw=detail_periksa_lab.kd_jenis_prw and "+
                                    "template_laboratorium.id_template=detail_periksa_lab.id_template where  "+
                                    "detail_periksa_lab.tgl_periksa between ? and ? and detail_periksa_lab.kd_jenis_prw=? and reg_periksa.kd_pj=?");
                                try {
                                    psdetaillab.setString(1,Valid.SetTgl(Tgl1.getSelectedItem()+""));
                                    psdetaillab.setString(2,Valid.SetTgl(Tgl2.getSelectedItem()+""));
                                    psdetaillab.setString(3,rsperiksalab.getString("kd_jenis_prw"));
                                    psdetaillab.setString(4,rs.getString("kd_pj"));
                                    rsdetaillab=psdetaillab.executeQuery();
                                    while(rsdetaillab.next()){
                                        detaillab=rsdetaillab.getDouble("total");
                                    }
                                    tabMode.addRow(new Object[]{
                                        "","","     "+rsperiksalab.getString("nm_perawatan"),
                                        rsperiksalab.getString("jml"),Valid.SetAngka(rsperiksalab.getDouble("total")+detaillab)
                                    });     
                                    jm=jm+rsperiksalab.getDouble("total")+detaillab;
                                } catch (Exception e) {
                                    System.out.println(e);
                                } finally{
                                    if(rsdetaillab!=null){
                                        rsdetaillab.close();
                                    }
                                    if(psdetaillab!=null){
                                        psdetaillab.close();
                                    }
                                }
                            }
                        } catch (Exception e) {
                            System.out.println(e);
                        } finally{
                            if(rsperiksalab!=null){
                                rsperiksalab.close();
                            }
                            if(psperiksalab!=null){
                                psperiksalab.close();
                            }
                        }
                   }                    
                   
                   //pemeriksaan radiologi
                   if(chkRadiologi.isSelected()==true){
                        psperiksaradiologi=koneksi.prepareStatement(
                            "select jns_perawatan_radiologi.nm_perawatan,periksa_radiologi.bhp,"+
                            "count(periksa_radiologi.kd_jenis_prw) as jml, " +
                            "sum(periksa_radiologi.bhp) as total, "+
                            "periksa_radiologi.kd_jenis_prw from jns_perawatan_radiologi inner join periksa_radiologi inner join reg_periksa  "+
                            "on periksa_radiologi.no_rawat=reg_periksa.no_rawat and periksa_radiologi.kd_jenis_prw=jns_perawatan_radiologi.kd_jenis_prw "+
                            "where periksa_radiologi.tgl_periksa between ? and ? and reg_periksa.kd_pj=? "+
                            "group by periksa_radiologi.kd_jenis_prw order by jns_perawatan_radiologi.nm_perawatan  ");
                        try {
                            psperiksaradiologi.setString(1,Valid.SetTgl(Tgl1.getSelectedItem()+""));
                            psperiksaradiologi.setString(2,Valid.SetTgl(Tgl2.getSelectedItem()+""));
                            psperiksaradiologi.setString(3,rs.getString("kd_pj"));
                            rsperiksaradiologi=psperiksaradiologi.executeQuery();
                            if(rsperiksaradiologi.next()){
                                a++;
                                 tabMode.addRow(new Object[]{"","",a+". Periksa Radiologi","",""}); 
                            }
                            rsperiksaradiologi.beforeFirst();
                            while(rsperiksaradiologi.next()){ 
                                tabMode.addRow(new Object[]{
                                    "","","     "+rsperiksaradiologi.getString("nm_perawatan"),
                                    rsperiksaradiologi.getString("jml"),Valid.SetAngka(rsperiksaradiologi.getDouble("total"))
                                });             
                                jm=jm+rsperiksaradiologi.getDouble("total");
                            }
                        } catch (Exception e) {
                            System.out.println("Notifikasi : "+e);
                        } finally{
                            if(rsperiksaradiologi!=null){
                                rsperiksaradiologi.close();
                            }
                            if(psperiksaradiologi!=null){
                                psperiksaradiologi.close();
                            }
                        }              
                   }
                   
                   if(jm>0){
                        tabMode.addRow(new Object[]{"","","Total : ","",Valid.SetAngka(jm)});
                   }

                   totaljm=totaljm+jm;   
                   i++;
                } 
           } catch (Exception e) {
               System.out.println("Notifikasi : "+e);
           } finally{
               if(rs!=null){
                   rs.close();
               }
               if(ps!=null){
                   ps.close();
               }
           }
              
            if(totaljm>0){
                   tabMode.addRow(new Object[]{">> ","Total Jasa Sarana :"," ","",Valid.SetAngka(totaljm)});
            }             
        }catch(SQLException e){
            System.out.println("Catatan  "+e);
        }
        
    }
    
    public void isCek(){
       // BtnPrint.setEnabled(var.getbulanan_paramedis());
    }
    
}
