/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DlgPenyakit.java
 *
 * Created on May 23, 2010, 12:57:16 AM
 */

package keuangan;

import fungsi.WarnaTable;
import fungsi.batasInput;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import fungsi.akses;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author dosen
 */
public final class DlgRekening extends javax.swing.JDialog {
    private final DefaultTableModel tabMode;
    private sekuel Sequel=new sekuel();
    private validasi Valid=new validasi();
    private Connection koneksi=koneksiDB.condb();
    private PreparedStatement ps,ps2,ps3,ps4,ps5,ps6,ps7,ps8,ps9,ps10,ps11,ps12,ps13;
    private ResultSet rs,rs2,rs3,rs4,rs5,rs6,rs7,rs8,rs9,rs10,rs11,rs12,rs13;
    /** Creates new form DlgPenyakit
     * @param parent
     * @param modal */
    public DlgRekening(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocation(10,2);
        setSize(628,674);

        Object[] row={"Kode Rekening","Nama Rekening","Kode Rekening","Nama Rekening","Tipe","Balance"};
        tabMode=new DefaultTableModel(null,row){
              @Override public boolean isCellEditable(int rowIndex, int colIndex){return false;}
        };
        tbKamar.setModel(tabMode);
        //tbPenyakit.setDefaultRenderer(Object.class, new WarnaTable(panelJudul.getBackground(),tbPenyakit.getBackground()));
        tbKamar.setPreferredScrollableViewportSize(new Dimension(500,500));
        tbKamar.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        for (int i = 0; i < 6; i++) {
            TableColumn column = tbKamar.getColumnModel().getColumn(i);
            if(i==0){
                column.setMinWidth(0);
                column.setMaxWidth(0);
            }else if(i==1){
                column.setMinWidth(0);
                column.setMaxWidth(0);
            }else if(i==2){
                column.setPreferredWidth(110);
            }else if(i==3){
                column.setPreferredWidth(400);
            }else if(i==4){
                column.setPreferredWidth(80);
            }else if(i==5){
                column.setPreferredWidth(80);
            }
        }
        tbKamar.setDefaultRenderer(Object.class, new WarnaTable());
        
        Kd.setDocument(new batasInput((byte)15).getKata(Kd));
        Nm.setDocument(new batasInput((byte)100).getKata(Nm));
        KdSub.setDocument(new batasInput((byte)15).getKata(KdSub));
        KdSubInduk.setDocument(new batasInput((byte)15).getKata(KdSubInduk));
        NmSub.setDocument(new batasInput((byte)100).getKata(NmSub));
        TCari.setDocument(new batasInput((byte)100).getKata(TCari));
        if(koneksiDB.CARICEPAT().equals("aktif")){
            TCari.getDocument().addDocumentListener(new javax.swing.event.DocumentListener(){
                @Override
                public void insertUpdate(DocumentEvent e) {
                    if(TCari.getText().length()>2){
                        tampil2();
                    }
                }
                @Override
                public void removeUpdate(DocumentEvent e) {
                    if(TCari.getText().length()>2){
                        tampil2();
                    }
                }
                @Override
                public void changedUpdate(DocumentEvent e) {
                    if(TCari.getText().length()>2){
                        tampil2();
                    }
                }
            });
        }  
        
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Kd2 = new widget.TextBox();
        WindowSubRekening = new javax.swing.JDialog();
        internalFrame7 = new widget.InternalFrame();
        BtnCloseIn5 = new widget.Button();
        BtnSimpan5 = new widget.Button();
        label35 = new widget.Label();
        KdSub = new widget.TextBox();
        NmSub = new widget.TextBox();
        label38 = new widget.Label();
        label37 = new widget.Label();
        Tipe1 = new widget.ComboBox();
        Balan1 = new widget.ComboBox();
        label39 = new widget.Label();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        MnSubAkun = new javax.swing.JMenuItem();
        MnJadikanSub = new javax.swing.JMenuItem();
        MnJadikanUtama = new javax.swing.JMenuItem();
        WindowJadikanSub = new javax.swing.JDialog();
        internalFrame8 = new widget.InternalFrame();
        BtnCloseIn6 = new widget.Button();
        BtnSimpan6 = new widget.Button();
        label40 = new widget.Label();
        KdSubInduk = new widget.TextBox();
        NmSubInduk = new widget.TextBox();
        label41 = new widget.Label();
        BtnCari1 = new widget.Button();
        internalFrame1 = new widget.InternalFrame();
        Scroll = new widget.ScrollPane();
        tbKamar = new widget.Table();
        panelisi4 = new widget.panelisi();
        label34 = new widget.Label();
        label32 = new widget.Label();
        Kd = new widget.TextBox();
        label36 = new widget.Label();
        Nm = new widget.TextBox();
        Tipe = new widget.ComboBox();
        label33 = new widget.Label();
        Balan = new widget.ComboBox();
        jPanel1 = new javax.swing.JPanel();
        panelisi3 = new widget.panelisi();
        label9 = new widget.Label();
        TCari = new widget.TextBox();
        BtnCari = new widget.Button();
        BtnAll = new widget.Button();
        label10 = new widget.Label();
        LCount = new widget.Label();
        panelisi1 = new widget.panelisi();
        BtnSimpan = new widget.Button();
        BtnBatal = new widget.Button();
        BtnHapus = new widget.Button();
        BtnEdit = new widget.Button();
        BtnPrint = new widget.Button();
        BtnKeluar = new widget.Button();

        Kd2.setHighlighter(null);
        Kd2.setName("Kd2"); // NOI18N
        Kd2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Kd2KeyPressed(evt);
            }
        });

        WindowSubRekening.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        WindowSubRekening.setModal(true);
        WindowSubRekening.setName("WindowSubRekening"); // NOI18N
        WindowSubRekening.setUndecorated(true);
        WindowSubRekening.setResizable(false);

        internalFrame7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(230, 235, 225)), "::[ Sub Akun Rekening ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(50,50,50))); // NOI18N
        internalFrame7.setName("internalFrame7"); // NOI18N
        internalFrame7.setLayout(null);

        BtnCloseIn5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/cross.png"))); // NOI18N
        BtnCloseIn5.setMnemonic('P');
        BtnCloseIn5.setText("Tutup");
        BtnCloseIn5.setToolTipText("Alt+P");
        BtnCloseIn5.setName("BtnCloseIn5"); // NOI18N
        BtnCloseIn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCloseIn5ActionPerformed(evt);
            }
        });
        internalFrame7.add(BtnCloseIn5);
        BtnCloseIn5.setBounds(130, 87, 100, 30);

        BtnSimpan5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/save-16x16.png"))); // NOI18N
        BtnSimpan5.setMnemonic('S');
        BtnSimpan5.setText("Simpan");
        BtnSimpan5.setToolTipText("Alt+S");
        BtnSimpan5.setName("BtnSimpan5"); // NOI18N
        BtnSimpan5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSimpan5ActionPerformed(evt);
            }
        });
        internalFrame7.add(BtnSimpan5);
        BtnSimpan5.setBounds(20, 87, 100, 30);

        label35.setText("Kode Rekening :");
        label35.setName("label35"); // NOI18N
        label35.setPreferredSize(new java.awt.Dimension(35, 23));
        internalFrame7.add(label35);
        label35.setBounds(0, 22, 105, 23);

        KdSub.setHighlighter(null);
        KdSub.setName("KdSub"); // NOI18N
        KdSub.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                KdSubKeyPressed(evt);
            }
        });
        internalFrame7.add(KdSub);
        KdSub.setBounds(108, 22, 120, 23);

        NmSub.setHighlighter(null);
        NmSub.setName("NmSub"); // NOI18N
        NmSub.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NmSubKeyPressed(evt);
            }
        });
        internalFrame7.add(NmSub);
        NmSub.setBounds(108, 52, 507, 23);

        label38.setText("Nama Rekening :");
        label38.setName("label38"); // NOI18N
        label38.setPreferredSize(new java.awt.Dimension(35, 23));
        internalFrame7.add(label38);
        label38.setBounds(0, 52, 105, 23);

        label37.setText("Tipe :");
        label37.setName("label37"); // NOI18N
        label37.setPreferredSize(new java.awt.Dimension(35, 23));
        internalFrame7.add(label37);
        label37.setBounds(227, 22, 50, 23);

        Tipe1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "N (Neraca)", "R (Rugi/Laba)", "M (Perubahan Modal)" }));
        Tipe1.setName("Tipe1"); // NOI18N
        Tipe1.setPreferredSize(new java.awt.Dimension(45, 23));
        Tipe1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Tipe1KeyPressed(evt);
            }
        });
        internalFrame7.add(Tipe1);
        Tipe1.setBounds(280, 22, 190, 23);

        Balan1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Debet", "Kredit" }));
        Balan1.setName("Balan1"); // NOI18N
        Balan1.setPreferredSize(new java.awt.Dimension(45, 23));
        Balan1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Balan1KeyPressed(evt);
            }
        });
        internalFrame7.add(Balan1);
        Balan1.setBounds(530, 22, 85, 23);

        label39.setText("Balance :");
        label39.setName("label39"); // NOI18N
        label39.setPreferredSize(new java.awt.Dimension(35, 23));
        internalFrame7.add(label39);
        label39.setBounds(467, 22, 60, 23);

        WindowSubRekening.getContentPane().add(internalFrame7, java.awt.BorderLayout.CENTER);

        jPopupMenu1.setName("jPopupMenu1"); // NOI18N

        MnSubAkun.setBackground(new java.awt.Color(255, 255, 254));
        MnSubAkun.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        MnSubAkun.setForeground(new java.awt.Color(50,50,50));
        MnSubAkun.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/category.png"))); // NOI18N
        MnSubAkun.setText("Buat Sub Akun Rekening");
        MnSubAkun.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        MnSubAkun.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        MnSubAkun.setName("MnSubAkun"); // NOI18N
        MnSubAkun.setPreferredSize(new java.awt.Dimension(250, 28));
        MnSubAkun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnSubAkunActionPerformed(evt);
            }
        });
        jPopupMenu1.add(MnSubAkun);

        MnJadikanSub.setBackground(new java.awt.Color(255, 255, 254));
        MnJadikanSub.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        MnJadikanSub.setForeground(new java.awt.Color(50,50,50));
        MnJadikanSub.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/category.png"))); // NOI18N
        MnJadikanSub.setText("Jadikan Sub Akun Rekening");
        MnJadikanSub.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        MnJadikanSub.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        MnJadikanSub.setName("MnJadikanSub"); // NOI18N
        MnJadikanSub.setPreferredSize(new java.awt.Dimension(250, 28));
        MnJadikanSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnJadikanSubActionPerformed(evt);
            }
        });
        jPopupMenu1.add(MnJadikanSub);

        MnJadikanUtama.setBackground(new java.awt.Color(255, 255, 254));
        MnJadikanUtama.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        MnJadikanUtama.setForeground(new java.awt.Color(50,50,50));
        MnJadikanUtama.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/category.png"))); // NOI18N
        MnJadikanUtama.setText("Jadikan Akun Utama");
        MnJadikanUtama.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        MnJadikanUtama.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        MnJadikanUtama.setName("MnJadikanUtama"); // NOI18N
        MnJadikanUtama.setPreferredSize(new java.awt.Dimension(250, 28));
        MnJadikanUtama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnJadikanUtamaActionPerformed(evt);
            }
        });
        jPopupMenu1.add(MnJadikanUtama);

        WindowJadikanSub.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        WindowJadikanSub.setModal(true);
        WindowJadikanSub.setName("WindowJadikanSub"); // NOI18N
        WindowJadikanSub.setUndecorated(true);
        WindowJadikanSub.setResizable(false);

        internalFrame8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(230, 235, 225)), "::[ Jadikan Sub Akun ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(50,50,50))); // NOI18N
        internalFrame8.setName("internalFrame8"); // NOI18N
        internalFrame8.setLayout(null);

        BtnCloseIn6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/cross.png"))); // NOI18N
        BtnCloseIn6.setMnemonic('P');
        BtnCloseIn6.setText("Tutup");
        BtnCloseIn6.setToolTipText("Alt+P");
        BtnCloseIn6.setName("BtnCloseIn6"); // NOI18N
        BtnCloseIn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCloseIn6ActionPerformed(evt);
            }
        });
        internalFrame8.add(BtnCloseIn6);
        BtnCloseIn6.setBounds(130, 87, 100, 30);

        BtnSimpan6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/save-16x16.png"))); // NOI18N
        BtnSimpan6.setMnemonic('S');
        BtnSimpan6.setText("Simpan");
        BtnSimpan6.setToolTipText("Alt+S");
        BtnSimpan6.setName("BtnSimpan6"); // NOI18N
        BtnSimpan6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSimpan6ActionPerformed(evt);
            }
        });
        internalFrame8.add(BtnSimpan6);
        BtnSimpan6.setBounds(20, 87, 100, 30);

        label40.setText("Kode Rekening :");
        label40.setName("label40"); // NOI18N
        label40.setPreferredSize(new java.awt.Dimension(35, 23));
        internalFrame8.add(label40);
        label40.setBounds(0, 22, 105, 23);

        KdSubInduk.setHighlighter(null);
        KdSubInduk.setName("KdSubInduk"); // NOI18N
        KdSubInduk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                KdSubIndukKeyPressed(evt);
            }
        });
        internalFrame8.add(KdSubInduk);
        KdSubInduk.setBounds(108, 22, 100, 23);

        NmSubInduk.setEditable(false);
        NmSubInduk.setHighlighter(null);
        NmSubInduk.setName("NmSubInduk"); // NOI18N
        internalFrame8.add(NmSubInduk);
        NmSubInduk.setBounds(108, 52, 300, 23);

        label41.setText("Nama Rekening :");
        label41.setName("label41"); // NOI18N
        label41.setPreferredSize(new java.awt.Dimension(35, 23));
        internalFrame8.add(label41);
        label41.setBounds(0, 52, 105, 23);

        BtnCari1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        BtnCari1.setMnemonic('2');
        BtnCari1.setToolTipText("Alt+2");
        BtnCari1.setName("BtnCari1"); // NOI18N
        BtnCari1.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnCari1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCari1ActionPerformed(evt);
            }
        });
        internalFrame8.add(BtnCari1);
        BtnCari1.setBounds(210, 22, 28, 23);

        WindowJadikanSub.getContentPane().add(internalFrame8, java.awt.BorderLayout.CENTER);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), "::[ Data Rekening ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(50,50,50))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        Scroll.setName("Scroll"); // NOI18N
        Scroll.setOpaque(true);

        tbKamar.setToolTipText("Silahkan klik untuk memilih data yang mau diedit ataupun dihapus");
        tbKamar.setComponentPopupMenu(jPopupMenu1);
        tbKamar.setName("tbKamar"); // NOI18N
        tbKamar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbKamarMouseClicked(evt);
            }
        });
        tbKamar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbKamarKeyPressed(evt);
            }
        });
        Scroll.setViewportView(tbKamar);

        internalFrame1.add(Scroll, java.awt.BorderLayout.CENTER);

        panelisi4.setName("panelisi4"); // NOI18N
        panelisi4.setPreferredSize(new java.awt.Dimension(100, 77));
        panelisi4.setLayout(null);

        label34.setText("Kode Rekening :");
        label34.setName("label34"); // NOI18N
        label34.setPreferredSize(new java.awt.Dimension(35, 23));
        panelisi4.add(label34);
        label34.setBounds(0, 12, 105, 23);

        label32.setText("Tipe :");
        label32.setName("label32"); // NOI18N
        label32.setPreferredSize(new java.awt.Dimension(35, 23));
        panelisi4.add(label32);
        label32.setBounds(217, 12, 50, 23);

        Kd.setHighlighter(null);
        Kd.setName("Kd"); // NOI18N
        Kd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                KdKeyPressed(evt);
            }
        });
        panelisi4.add(Kd);
        Kd.setBounds(108, 12, 100, 23);

        label36.setText("Nama Rekening :");
        label36.setName("label36"); // NOI18N
        label36.setPreferredSize(new java.awt.Dimension(35, 23));
        panelisi4.add(label36);
        label36.setBounds(0, 42, 105, 23);

        Nm.setHighlighter(null);
        Nm.setName("Nm"); // NOI18N
        Nm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NmKeyPressed(evt);
            }
        });
        panelisi4.add(Nm);
        Nm.setBounds(108, 42, 512, 23);

        Tipe.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "N (Neraca)", "R (Rugi/Laba)", "M (Perubahan Modal)" }));
        Tipe.setName("Tipe"); // NOI18N
        Tipe.setPreferredSize(new java.awt.Dimension(45, 23));
        Tipe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TipeKeyPressed(evt);
            }
        });
        panelisi4.add(Tipe);
        Tipe.setBounds(270, 12, 190, 23);

        label33.setText("Balance :");
        label33.setName("label33"); // NOI18N
        label33.setPreferredSize(new java.awt.Dimension(35, 23));
        panelisi4.add(label33);
        label33.setBounds(467, 12, 60, 23);

        Balan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Debet", "Kredit" }));
        Balan.setName("Balan"); // NOI18N
        Balan.setPreferredSize(new java.awt.Dimension(45, 23));
        Balan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BalanKeyPressed(evt);
            }
        });
        panelisi4.add(Balan);
        Balan.setBounds(530, 12, 90, 23);

        internalFrame1.add(panelisi4, java.awt.BorderLayout.PAGE_START);

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(816, 100));
        jPanel1.setLayout(new java.awt.BorderLayout(1, 1));

        panelisi3.setName("panelisi3"); // NOI18N
        panelisi3.setPreferredSize(new java.awt.Dimension(100, 44));
        panelisi3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 4, 9));

        label9.setText("Key Word :");
        label9.setName("label9"); // NOI18N
        label9.setPreferredSize(new java.awt.Dimension(70, 23));
        panelisi3.add(label9);

        TCari.setName("TCari"); // NOI18N
        TCari.setPreferredSize(new java.awt.Dimension(350, 23));
        TCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TCariKeyPressed(evt);
            }
        });
        panelisi3.add(TCari);

        BtnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        BtnCari.setMnemonic('1');
        BtnCari.setToolTipText("Alt+1");
        BtnCari.setName("BtnCari"); // NOI18N
        BtnCari.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCariActionPerformed(evt);
            }
        });
        BtnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnCariKeyPressed(evt);
            }
        });
        panelisi3.add(BtnCari);

        BtnAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Search-16x16.png"))); // NOI18N
        BtnAll.setMnemonic('2');
        BtnAll.setToolTipText("Alt+2");
        BtnAll.setName("BtnAll"); // NOI18N
        BtnAll.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAllActionPerformed(evt);
            }
        });
        BtnAll.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnAllKeyPressed(evt);
            }
        });
        panelisi3.add(BtnAll);

        label10.setText("Record :");
        label10.setName("label10"); // NOI18N
        label10.setPreferredSize(new java.awt.Dimension(70, 23));
        panelisi3.add(label10);

        LCount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LCount.setText("0");
        LCount.setName("LCount"); // NOI18N
        LCount.setPreferredSize(new java.awt.Dimension(60, 23));
        panelisi3.add(LCount);

        jPanel1.add(panelisi3, java.awt.BorderLayout.PAGE_START);

        panelisi1.setName("panelisi1"); // NOI18N
        panelisi1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        BtnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/save-16x16.png"))); // NOI18N
        BtnSimpan.setMnemonic('S');
        BtnSimpan.setText("Simpan");
        BtnSimpan.setToolTipText("Alt+S");
        BtnSimpan.setName("BtnSimpan"); // NOI18N
        BtnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSimpanActionPerformed(evt);
            }
        });
        BtnSimpan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnSimpanKeyPressed(evt);
            }
        });
        panelisi1.add(BtnSimpan);

        BtnBatal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Cancel-2-16x16.png"))); // NOI18N
        BtnBatal.setMnemonic('B');
        BtnBatal.setText("Baru");
        BtnBatal.setToolTipText("Alt+B");
        BtnBatal.setName("BtnBatal"); // NOI18N
        BtnBatal.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBatalActionPerformed(evt);
            }
        });
        BtnBatal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnBatalKeyPressed(evt);
            }
        });
        panelisi1.add(BtnBatal);

        BtnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/stop_f2.png"))); // NOI18N
        BtnHapus.setMnemonic('H');
        BtnHapus.setText("Hapus");
        BtnHapus.setToolTipText("Alt+H");
        BtnHapus.setName("BtnHapus"); // NOI18N
        BtnHapus.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnHapusActionPerformed(evt);
            }
        });
        BtnHapus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnHapusKeyPressed(evt);
            }
        });
        panelisi1.add(BtnHapus);

        BtnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/inventaris.png"))); // NOI18N
        BtnEdit.setMnemonic('G');
        BtnEdit.setText("Ganti");
        BtnEdit.setToolTipText("Alt+G");
        BtnEdit.setName("BtnEdit"); // NOI18N
        BtnEdit.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditActionPerformed(evt);
            }
        });
        BtnEdit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnEditKeyPressed(evt);
            }
        });
        panelisi1.add(BtnEdit);

        BtnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/b_print.png"))); // NOI18N
        BtnPrint.setMnemonic('T');
        BtnPrint.setText("Cetak");
        BtnPrint.setToolTipText("Alt+T");
        BtnPrint.setName("BtnPrint"); // NOI18N
        BtnPrint.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPrintActionPerformed(evt);
            }
        });
        BtnPrint.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnPrintKeyPressed(evt);
            }
        });
        panelisi1.add(BtnPrint);

        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setText("Keluar");
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelisi1.add(BtnKeluar);

        jPanel1.add(panelisi1, java.awt.BorderLayout.CENTER);

        internalFrame1.add(jPanel1, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void KdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_KdKeyPressed
        Valid.pindah(evt,TCari,Nm);
}//GEN-LAST:event_KdKeyPressed

    private void BtnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSimpanActionPerformed
        if(Kd.getText().trim().equals("")){
            Valid.textKosong(Kd,"Kode Rekening");
        }else if(Nm.getText().trim().equals("")){
            Valid.textKosong(Nm,"Nama Rekening");
        }else{
            Sequel.menyimpan("rekening","'"+Kd.getText()+"','"+
                    Nm.getText()+"','"+
                    Tipe.getSelectedItem().toString().substring(0,1) +"','"+
                    Balan.getSelectedItem().toString().substring(0,1)+"','0'","Kode Rekening");
            BtnCariActionPerformed(evt);
            emptTeks();
        }
}//GEN-LAST:event_BtnSimpanActionPerformed

    private void BtnSimpanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnSimpanKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnSimpanActionPerformed(null);
        }else{
            Valid.pindah(evt,Balan,BtnBatal);
        }
}//GEN-LAST:event_BtnSimpanKeyPressed

    private void BtnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBatalActionPerformed
        emptTeks();
}//GEN-LAST:event_BtnBatalActionPerformed

    private void BtnBatalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnBatalKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            emptTeks();
        }else{Valid.pindah(evt, BtnSimpan, BtnHapus);}
}//GEN-LAST:event_BtnBatalKeyPressed

    private void BtnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnHapusActionPerformed
        Valid.hapusTable(tabMode,Kd,"rekening","kd_rek");
        BtnCariActionPerformed(evt);
        emptTeks();
}//GEN-LAST:event_BtnHapusActionPerformed

    private void BtnHapusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnHapusKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnHapusActionPerformed(null);
        }else{
            Valid.pindah(evt, BtnBatal, BtnEdit);
        }
}//GEN-LAST:event_BtnHapusKeyPressed

    private void BtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEditActionPerformed
        if(Kd.getText().trim().equals("")){
            Valid.textKosong(Kd,"Kode Rekening");
        }else if(Nm.getText().trim().equals("")){
            Valid.textKosong(Nm,"Nama Rekening");
        }else{
            Valid.editTable(tabMode,"rekening","kd_rek",Kd2,"nm_rek='"+Nm.getText()+
                    "',tipe='"+Tipe.getSelectedItem().toString().substring(0,1)+"',balance='"+Balan.getSelectedItem().toString().substring(0,1)+"',kd_rek='"+Kd.getText()+"'");
            BtnCariActionPerformed(evt);
            emptTeks();
        }
}//GEN-LAST:event_BtnEditActionPerformed

    private void BtnEditKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnEditKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnEditActionPerformed(null);
        }else{
            Valid.pindah(evt, BtnHapus, BtnPrint);
        }
}//GEN-LAST:event_BtnEditKeyPressed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        WindowSubRekening.dispose();
        WindowJadikanSub.dispose();
        dispose();
}//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            dispose();
        }else{Valid.pindah(evt,BtnEdit,TCari);}
}//GEN-LAST:event_BtnKeluarKeyPressed

    private void BtnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPrintActionPerformed
        if(tbKamar.getRowCount()==0){
            JOptionPane.showMessageDialog(null,"Maaf, data sudah habis. Tidak ada data yang bisa anda print...!!!!");
            BtnBatal.requestFocus();
        }else if(tbKamar.getRowCount()!=0){
            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));        
            Map<String, Object> param = new HashMap<>();                 
            param.put("namars",akses.getnamars());
            param.put("alamatrs",akses.getalamatrs());
            param.put("kotars",akses.getkabupatenrs());
            param.put("propinsirs",akses.getpropinsirs());
            param.put("kontakrs",akses.getkontakrs());
            param.put("emailrs",akses.getemailrs());   
            param.put("logo",Sequel.cariGambar("select logo from setting")); 
            if(TCari.getText().trim().equals("")){
                
                Sequel.queryu("truncate table temporary");
                int row=tabMode.getRowCount();
                for(int i=0;i<row;i++){  
                    Sequel.menyimpan("temporary","'0','"+
                                    tabMode.getValueAt(i,2).toString()+"','"+
                                    tabMode.getValueAt(i,3).toString()+"','"+
                                    tabMode.getValueAt(i,4).toString()+"','"+
                                    tabMode.getValueAt(i,5).toString()+"','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''","Keuangan"); 
                }
                  
                Valid.MyReport("rptRekening2.jasper","report","::[ Data Rekening ]::",param);
            }else{
                Valid.MyReportqry("rptRekening.jasper","report","::[ Data Rekening ]::","select kd_rek, nm_rek, tipe, balance "+
                    " from rekening where kd_rek like '%"+TCari.getText().trim()+"%' or "+
                    " nm_rek like '%"+TCari.getText().trim()+"%' or "+
                    " tipe like '%"+TCari.getText().trim()+"%' or "+
                    " balance like '%"+TCari.getText().trim()+"%' order by kd_rek",param);                
            }         
            this.setCursor(Cursor.getDefaultCursor());
        }        
}//GEN-LAST:event_BtnPrintActionPerformed

    private void BtnPrintKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnPrintKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnPrintActionPerformed(null);
        }else{
            Valid.pindah(evt, BtnEdit, BtnKeluar);
        }
}//GEN-LAST:event_BtnPrintKeyPressed

    private void TCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            BtnCariActionPerformed(null);
        }else if(evt.getKeyCode()==KeyEvent.VK_PAGE_DOWN){
            BtnCari.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_PAGE_UP){
            BtnKeluar.requestFocus();
        }
}//GEN-LAST:event_TCariKeyPressed

    private void BtnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCariActionPerformed
        if(TCari.getText().trim().equals("")){
            tampil();
        }else{
            tampil2();
        }   
}//GEN-LAST:event_BtnCariActionPerformed

    private void BtnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnCariActionPerformed(null);
        }else{
            Valid.pindah(evt, TCari, BtnAll);
        }
}//GEN-LAST:event_BtnCariKeyPressed

    private void BtnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAllActionPerformed
        TCari.setText("");
        tampil();
}//GEN-LAST:event_BtnAllActionPerformed

    private void BtnAllKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnAllKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnAllActionPerformed(null);
        }else{
            Valid.pindah(evt, BtnCari, TCari);
        }
}//GEN-LAST:event_BtnAllKeyPressed

    private void tbKamarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbKamarMouseClicked
        if(tbKamar.getRowCount()!=0){
            try {
                getData();
            } catch (java.lang.NullPointerException e) {
            }
        }
}//GEN-LAST:event_tbKamarMouseClicked

    private void tbKamarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbKamarKeyPressed
        if(tbKamar.getRowCount()!=0){
            if((evt.getKeyCode()==KeyEvent.VK_ENTER)||(evt.getKeyCode()==KeyEvent.VK_UP)||(evt.getKeyCode()==KeyEvent.VK_DOWN)){
                try {
                    getData();
                } catch (java.lang.NullPointerException e) {
                }
            }
        }
}//GEN-LAST:event_tbKamarKeyPressed

private void NmKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NmKeyPressed
   Valid.pindah(evt,Kd,Tipe);
}//GEN-LAST:event_NmKeyPressed

    private void Kd2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Kd2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_Kd2KeyPressed

    private void TipeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TipeKeyPressed
        Valid.pindah(evt,Nm,Balan);
    }//GEN-LAST:event_TipeKeyPressed

    private void BalanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BalanKeyPressed
        Valid.pindah(evt,Tipe,BtnSimpan);
    }//GEN-LAST:event_BalanKeyPressed

    private void BtnCloseIn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCloseIn5ActionPerformed
        WindowSubRekening.dispose();
    }//GEN-LAST:event_BtnCloseIn5ActionPerformed

    private void BtnSimpan5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSimpan5ActionPerformed
        if(KdSub.getText().trim().equals("")){
            Valid.textKosong(KdSub,"Kode Rekening");
        }else if(NmSub.getText().trim().equals("")){
            Valid.textKosong(NmSub,"Nama Rekening");
        }else{
            if(Sequel.menyimpantf("rekening","'"+KdSub.getText()+"','"+
                    NmSub.getText()+"','"+
                    Tipe1.getSelectedItem().toString().substring(0,1) +"','"+
                    Balan1.getSelectedItem().toString().substring(0,1)+"','1'","Kode Rekening")==true){
                Sequel.menyimpan("subrekening","'"+Kd.getText()+"','"+KdSub.getText()+"'");                
                BtnCariActionPerformed(evt);
                emptTeks2();
            }
        }
    }//GEN-LAST:event_BtnSimpan5ActionPerformed

    private void KdSubKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_KdSubKeyPressed
        Valid.pindah(evt,BtnCloseIn5,Nm);
    }//GEN-LAST:event_KdSubKeyPressed

    private void NmSubKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NmSubKeyPressed
        Valid.pindah(evt,KdSub,Tipe1);
    }//GEN-LAST:event_NmSubKeyPressed

    private void Tipe1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Tipe1KeyPressed
        Valid.pindah(evt,NmSub,Balan1);
    }//GEN-LAST:event_Tipe1KeyPressed

    private void Balan1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Balan1KeyPressed
        Valid.pindah(evt,Tipe1,BtnSimpan5);
    }//GEN-LAST:event_Balan1KeyPressed

    private void MnSubAkunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnSubAkunActionPerformed
        if(tabMode.getRowCount()==0){
            JOptionPane.showMessageDialog(null,"Maaf, table masih kosong...!!!!");
            TCari.requestFocus();
        }else if(Nm.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null,"Maaf, Silahkan anda pilih dulu Akun Rekening...!!!");
            tbKamar.requestFocus();
        }else{
            KdSub.requestFocus();
            KdSub.setText(Kd.getText());
            WindowSubRekening.setSize(630,130);
            WindowSubRekening.setLocationRelativeTo(internalFrame1);
            WindowSubRekening.setAlwaysOnTop(false);
            WindowSubRekening.setVisible(true);
        }
            
    }//GEN-LAST:event_MnSubAkunActionPerformed

    private void MnJadikanSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnJadikanSubActionPerformed
        if(tabMode.getRowCount()==0){
            JOptionPane.showMessageDialog(null,"Maaf, table masih kosong...!!!!");
            TCari.requestFocus();
        }else if(Nm.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null,"Maaf, Silahkan anda pilih dulu Akun Rekening...!!!");
            tbKamar.requestFocus();
        }else{
            KdSubInduk.requestFocus();
            KdSubInduk.setText("");
            NmSubInduk.setText("");
            WindowJadikanSub.setSize(430,130);
            WindowJadikanSub.setLocationRelativeTo(internalFrame1);
            WindowJadikanSub.setAlwaysOnTop(false);
            WindowJadikanSub.setVisible(true);
        }
    }//GEN-LAST:event_MnJadikanSubActionPerformed

    private void BtnCloseIn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCloseIn6ActionPerformed
        WindowJadikanSub.dispose();
    }//GEN-LAST:event_BtnCloseIn6ActionPerformed

    private void BtnSimpan6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSimpan6ActionPerformed
        if(KdSubInduk.getText().trim().equals("")){
            Valid.textKosong(KdSub,"Kode Rekening");
        }else if(NmSubInduk.getText().trim().equals("")){
            Valid.textKosong(NmSub,"Nama Rekening");
        }else{
            Sequel.meghapus("subrekening","kd_rek2",Kd.getText());
            if(Sequel.menyimpantf2("subrekening","'"+KdSubInduk.getText()+"','"+Kd.getText()+"'","Sub Rekening")==true){
                Sequel.mengedit("rekening","kd_rek='"+Kd.getText()+"'","level='1'");                
            }else{
                Sequel.mengedit("rekening","kd_rek='"+Kd.getText()+"'","level='0'");
            }         
            WindowJadikanSub.dispose();
            BtnCariActionPerformed(evt);
            emptTeks2();
            
        }
    }//GEN-LAST:event_BtnSimpan6ActionPerformed

    private void BtnCari1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCari1ActionPerformed
        Sequel.cariIsi("select nm_rek from rekening where kd_rek=?",NmSubInduk,KdSubInduk.getText());
        if(NmSubInduk.getText().trim().equals("")){
            JOptionPane.showMessageDialog(rootPane,"Akun Rekening tidak ditemukan");
        }
        KdSubInduk.requestFocus();
    }//GEN-LAST:event_BtnCari1ActionPerformed

    private void KdSubIndukKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_KdSubIndukKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            if(!KdSubInduk.getText().trim().equals("")){
                 Sequel.cariIsi("select nm_rek from rekening where kd_rek=?",NmSubInduk,KdSubInduk.getText());
                if(NmSubInduk.getText().trim().equals("")){
                    JOptionPane.showMessageDialog(rootPane,"Akun Rekening tidak ditemukan");
                }
                KdSubInduk.requestFocus();
            } 
        }            
    }//GEN-LAST:event_KdSubIndukKeyPressed

    private void MnJadikanUtamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnJadikanUtamaActionPerformed
        if(tabMode.getRowCount()==0){
            JOptionPane.showMessageDialog(null,"Maaf, table masih kosong...!!!!");
            TCari.requestFocus();
        }else if(Nm.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null,"Maaf, Silahkan anda pilih dulu Akun Rekening...!!!");
            tbKamar.requestFocus();
        }else{
            Valid.editTable(tabMode,"rekening","kd_rek",Kd2,"level='0'");
            BtnCariActionPerformed(evt);
            emptTeks();
        }
    }//GEN-LAST:event_MnJadikanUtamaActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            DlgRekening dialog = new DlgRekening(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.ComboBox Balan;
    private widget.ComboBox Balan1;
    private widget.Button BtnAll;
    private widget.Button BtnBatal;
    private widget.Button BtnCari;
    private widget.Button BtnCari1;
    private widget.Button BtnCloseIn5;
    private widget.Button BtnCloseIn6;
    private widget.Button BtnEdit;
    private widget.Button BtnHapus;
    private widget.Button BtnKeluar;
    private widget.Button BtnPrint;
    private widget.Button BtnSimpan;
    private widget.Button BtnSimpan5;
    private widget.Button BtnSimpan6;
    private widget.TextBox Kd;
    private widget.TextBox Kd2;
    private widget.TextBox KdSub;
    private widget.TextBox KdSubInduk;
    private widget.Label LCount;
    private javax.swing.JMenuItem MnJadikanSub;
    private javax.swing.JMenuItem MnJadikanUtama;
    private javax.swing.JMenuItem MnSubAkun;
    private widget.TextBox Nm;
    private widget.TextBox NmSub;
    private widget.TextBox NmSubInduk;
    private widget.ScrollPane Scroll;
    private widget.TextBox TCari;
    private widget.ComboBox Tipe;
    private widget.ComboBox Tipe1;
    private javax.swing.JDialog WindowJadikanSub;
    private javax.swing.JDialog WindowSubRekening;
    private widget.InternalFrame internalFrame1;
    private widget.InternalFrame internalFrame7;
    private widget.InternalFrame internalFrame8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private widget.Label label10;
    private widget.Label label32;
    private widget.Label label33;
    private widget.Label label34;
    private widget.Label label35;
    private widget.Label label36;
    private widget.Label label37;
    private widget.Label label38;
    private widget.Label label39;
    private widget.Label label40;
    private widget.Label label41;
    private widget.Label label9;
    private widget.panelisi panelisi1;
    private widget.panelisi panelisi3;
    private widget.panelisi panelisi4;
    private widget.Table tbKamar;
    // End of variables declaration//GEN-END:variables

    public void tampil() {
        Valid.tabelKosong(tabMode);
        try{
            ps=koneksi.prepareStatement("select kd_rek, nm_rek, tipe, balance "+
                    " from rekening where level='0' and kd_rek like ? or "+
                    " level='0' and nm_rek like ? or "+
                    " level='0' and tipe like ? or "+
                    " level='0' and balance like ? order by kd_rek");
            try {            
                ps.setString(1,"%"+TCari.getText().trim()+"%");
                ps.setString(2,"%"+TCari.getText().trim()+"%");
                ps.setString(3,"%"+TCari.getText().trim()+"%");
                ps.setString(4,"%"+TCari.getText().trim()+"%");
                rs=ps.executeQuery();
                while(rs.next()){
                    tabMode.addRow(new Object[]{
                        rs.getString(1),rs.getString(2),rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)
                    });
                    ps2=koneksi.prepareStatement("select rekening.kd_rek, rekening.nm_rek, rekening.tipe, rekening.balance "+
                        " from rekening inner join subrekening on rekening.kd_rek=subrekening.kd_rek2 "+
                        " where subrekening.kd_rek=? and rekening.level='1' and rekening.kd_rek like ? or "+
                        " subrekening.kd_rek=? and rekening.level='1' and rekening.nm_rek like ? or "+
                        " subrekening.kd_rek=? and rekening.level='1' and rekening.tipe like ? or "+
                        " subrekening.kd_rek=? and rekening.level='1' and rekening.balance like ? order by rekening.kd_rek");
                    try {
                        ps2.setString(1,rs.getString(1));
                        ps2.setString(2,"%"+TCari.getText().trim()+"%");
                        ps2.setString(3,rs.getString(1));
                        ps2.setString(4,"%"+TCari.getText().trim()+"%");
                        ps2.setString(5,rs.getString(1));
                        ps2.setString(6,"%"+TCari.getText().trim()+"%");
                        ps2.setString(7,rs.getString(1));
                        ps2.setString(8,"%"+TCari.getText().trim()+"%");
                        rs2=ps2.executeQuery();
                        while(rs2.next()){
                            tabMode.addRow(new Object[]{
                                rs2.getString(1),rs2.getString(2)," "+rs2.getString(1)," "+rs2.getString(2),rs2.getString(3),rs2.getString(4)
                            });         
                            ps3=koneksi.prepareStatement("select rekening.kd_rek, rekening.nm_rek, rekening.tipe, rekening.balance "+
                                " from rekening inner join subrekening on rekening.kd_rek=subrekening.kd_rek2 "+
                                " where subrekening.kd_rek=? and rekening.level='1' and rekening.kd_rek like ? or "+
                                " subrekening.kd_rek=? and rekening.level='1' and rekening.nm_rek like ? or "+
                                " subrekening.kd_rek=? and rekening.level='1' and rekening.tipe like ? or "+
                                " subrekening.kd_rek=? and rekening.level='1' and rekening.balance like ? order by rekening.kd_rek");
                            try {
                                ps3.setString(1,rs2.getString(1));
                                ps3.setString(2,"%"+TCari.getText().trim()+"%");
                                ps3.setString(3,rs2.getString(1));
                                ps3.setString(4,"%"+TCari.getText().trim()+"%");
                                ps3.setString(5,rs2.getString(1));
                                ps3.setString(6,"%"+TCari.getText().trim()+"%");
                                ps3.setString(7,rs2.getString(1));
                                ps3.setString(8,"%"+TCari.getText().trim()+"%");
                                rs3=ps3.executeQuery();
                                while(rs3.next()){
                                    tabMode.addRow(new Object[]{
                                        rs3.getString(1),rs3.getString(2),"  "+rs3.getString(1),"  "+rs3.getString(2),rs3.getString(3),rs3.getString(4)
                                    });      
                                    ps4=koneksi.prepareStatement("select rekening.kd_rek, rekening.nm_rek, rekening.tipe, rekening.balance "+
                                        " from rekening inner join subrekening on rekening.kd_rek=subrekening.kd_rek2 "+
                                        " where subrekening.kd_rek=? and rekening.level='1' and rekening.kd_rek like ? or "+
                                        " subrekening.kd_rek=? and rekening.level='1' and rekening.nm_rek like ? or "+
                                        " subrekening.kd_rek=? and rekening.level='1' and rekening.tipe like ? or "+
                                        " subrekening.kd_rek=? and rekening.level='1' and rekening.balance like ? order by rekening.kd_rek");
                                    try {
                                        ps4.setString(1,rs3.getString(1));
                                        ps4.setString(2,"%"+TCari.getText().trim()+"%");
                                        ps4.setString(3,rs3.getString(1));
                                        ps4.setString(4,"%"+TCari.getText().trim()+"%");
                                        ps4.setString(5,rs3.getString(1));
                                        ps4.setString(6,"%"+TCari.getText().trim()+"%");
                                        ps4.setString(7,rs3.getString(1));
                                        ps4.setString(8,"%"+TCari.getText().trim()+"%");
                                        rs4=ps4.executeQuery();
                                        while(rs4.next()){
                                            tabMode.addRow(new Object[]{
                                                rs4.getString(1),rs4.getString(2),"   "+rs4.getString(1),"   "+rs4.getString(2),rs4.getString(3),rs4.getString(4)
                                            });     
                                            ps5=koneksi.prepareStatement("select rekening.kd_rek, rekening.nm_rek, rekening.tipe, rekening.balance "+
                                                " from rekening inner join subrekening on rekening.kd_rek=subrekening.kd_rek2 "+
                                                " where subrekening.kd_rek=? and rekening.level='1' and rekening.kd_rek like ? or "+
                                                " subrekening.kd_rek=? and rekening.level='1' and rekening.nm_rek like ? or "+
                                                " subrekening.kd_rek=? and rekening.level='1' and rekening.tipe like ? or "+
                                                " subrekening.kd_rek=? and rekening.level='1' and rekening.balance like ? order by rekening.kd_rek");
                                            try {
                                                ps5.setString(1,rs4.getString(1));
                                                ps5.setString(2,"%"+TCari.getText().trim()+"%");
                                                ps5.setString(3,rs4.getString(1));
                                                ps5.setString(4,"%"+TCari.getText().trim()+"%");
                                                ps5.setString(5,rs4.getString(1));
                                                ps5.setString(6,"%"+TCari.getText().trim()+"%");
                                                ps5.setString(7,rs4.getString(1));
                                                ps5.setString(8,"%"+TCari.getText().trim()+"%");
                                                rs5=ps5.executeQuery();
                                                while(rs5.next()){
                                                    tabMode.addRow(new Object[]{
                                                        rs5.getString(1),rs5.getString(2),"    "+rs5.getString(1),"    "+rs5.getString(2),rs5.getString(3),rs5.getString(4)
                                                    });  
                                                    ps6=koneksi.prepareStatement("select rekening.kd_rek, rekening.nm_rek, rekening.tipe, rekening.balance "+
                                                        " from rekening inner join subrekening on rekening.kd_rek=subrekening.kd_rek2 "+
                                                        " where subrekening.kd_rek=? and rekening.level='1' and rekening.kd_rek like ? or "+
                                                        " subrekening.kd_rek=? and rekening.level='1' and rekening.nm_rek like ? or "+
                                                        " subrekening.kd_rek=? and rekening.level='1' and rekening.tipe like ? or "+
                                                        " subrekening.kd_rek=? and rekening.level='1' and rekening.balance like ? order by rekening.kd_rek");
                                                    try {
                                                        ps6.setString(1,rs5.getString(1));
                                                        ps6.setString(2,"%"+TCari.getText().trim()+"%");
                                                        ps6.setString(3,rs5.getString(1));
                                                        ps6.setString(4,"%"+TCari.getText().trim()+"%");
                                                        ps6.setString(5,rs5.getString(1));
                                                        ps6.setString(6,"%"+TCari.getText().trim()+"%");
                                                        ps6.setString(7,rs5.getString(1));
                                                        ps6.setString(8,"%"+TCari.getText().trim()+"%");
                                                        rs6=ps6.executeQuery();
                                                        while(rs6.next()){
                                                            tabMode.addRow(new Object[]{
                                                                rs6.getString(1),rs6.getString(2),"     "+rs6.getString(1),"     "+rs6.getString(2),rs6.getString(3),rs6.getString(4)
                                                            });
                                                            ps7=koneksi.prepareStatement("select rekening.kd_rek, rekening.nm_rek, rekening.tipe, rekening.balance "+
                                                                " from rekening inner join subrekening on rekening.kd_rek=subrekening.kd_rek2 "+
                                                                " where subrekening.kd_rek=? and rekening.level='1' and rekening.kd_rek like ? or "+
                                                                " subrekening.kd_rek=? and rekening.level='1' and rekening.nm_rek like ? or "+
                                                                " subrekening.kd_rek=? and rekening.level='1' and rekening.tipe like ? or "+
                                                                " subrekening.kd_rek=? and rekening.level='1' and rekening.balance like ? order by rekening.kd_rek");
                                                            try {
                                                                ps7.setString(1,rs6.getString(1));
                                                                ps7.setString(2,"%"+TCari.getText().trim()+"%");
                                                                ps7.setString(3,rs6.getString(1));
                                                                ps7.setString(4,"%"+TCari.getText().trim()+"%");
                                                                ps7.setString(5,rs6.getString(1));
                                                                ps7.setString(6,"%"+TCari.getText().trim()+"%");
                                                                ps7.setString(7,rs6.getString(1));
                                                                ps7.setString(8,"%"+TCari.getText().trim()+"%");
                                                                rs7=ps7.executeQuery();
                                                                while(rs7.next()){
                                                                    tabMode.addRow(new Object[]{
                                                                        rs7.getString(1),rs7.getString(2),"      "+rs7.getString(1),"      "+rs7.getString(2),rs7.getString(3),rs7.getString(4)
                                                                    });
                                                                    ps8=koneksi.prepareStatement("select rekening.kd_rek, rekening.nm_rek, rekening.tipe, rekening.balance "+
                                                                        " from rekening inner join subrekening on rekening.kd_rek=subrekening.kd_rek2 "+
                                                                        " where subrekening.kd_rek=? and rekening.level='1' and rekening.kd_rek like ? or "+
                                                                        " subrekening.kd_rek=? and rekening.level='1' and rekening.nm_rek like ? or "+
                                                                        " subrekening.kd_rek=? and rekening.level='1' and rekening.tipe like ? or "+
                                                                        " subrekening.kd_rek=? and rekening.level='1' and rekening.balance like ? order by rekening.kd_rek");
                                                                    try {
                                                                        ps8.setString(1,rs7.getString(1));
                                                                        ps8.setString(2,"%"+TCari.getText().trim()+"%");
                                                                        ps8.setString(3,rs7.getString(1));
                                                                        ps8.setString(4,"%"+TCari.getText().trim()+"%");
                                                                        ps8.setString(5,rs7.getString(1));
                                                                        ps8.setString(6,"%"+TCari.getText().trim()+"%");
                                                                        ps8.setString(7,rs7.getString(1));
                                                                        ps8.setString(8,"%"+TCari.getText().trim()+"%");
                                                                        rs8=ps8.executeQuery();
                                                                        while(rs8.next()){
                                                                            tabMode.addRow(new Object[]{
                                                                                rs8.getString(1),rs8.getString(2),"       "+rs8.getString(1),"       "+rs8.getString(2),rs8.getString(3),rs8.getString(4)
                                                                            });
                                                                            ps9=koneksi.prepareStatement("select rekening.kd_rek, rekening.nm_rek, rekening.tipe, rekening.balance "+
                                                                                " from rekening inner join subrekening on rekening.kd_rek=subrekening.kd_rek2 "+
                                                                                " where subrekening.kd_rek=? and rekening.level='1' and rekening.kd_rek like ? or "+
                                                                                " subrekening.kd_rek=? and rekening.level='1' and rekening.nm_rek like ? or "+
                                                                                " subrekening.kd_rek=? and rekening.level='1' and rekening.tipe like ? or "+
                                                                                " subrekening.kd_rek=? and rekening.level='1' and rekening.balance like ? order by rekening.kd_rek");
                                                                            try {
                                                                                ps9.setString(1,rs8.getString(1));
                                                                                ps9.setString(2,"%"+TCari.getText().trim()+"%");
                                                                                ps9.setString(3,rs8.getString(1));
                                                                                ps9.setString(4,"%"+TCari.getText().trim()+"%");
                                                                                ps9.setString(5,rs8.getString(1));
                                                                                ps9.setString(6,"%"+TCari.getText().trim()+"%");
                                                                                ps9.setString(7,rs8.getString(1));
                                                                                ps9.setString(8,"%"+TCari.getText().trim()+"%");
                                                                                rs9=ps9.executeQuery();
                                                                                while(rs9.next()){
                                                                                    tabMode.addRow(new Object[]{
                                                                                        rs9.getString(1),rs9.getString(2),"        "+rs9.getString(1),"        "+rs9.getString(2),rs9.getString(3),rs9.getString(4)
                                                                                    });
                                                                                    ps10=koneksi.prepareStatement("select rekening.kd_rek, rekening.nm_rek, rekening.tipe, rekening.balance "+
                                                                                        " from rekening inner join subrekening on rekening.kd_rek=subrekening.kd_rek2 "+
                                                                                        " where subrekening.kd_rek=? and rekening.level='1' and rekening.kd_rek like ? or "+
                                                                                        " subrekening.kd_rek=? and rekening.level='1' and rekening.nm_rek like ? or "+
                                                                                        " subrekening.kd_rek=? and rekening.level='1' and rekening.tipe like ? or "+
                                                                                        " subrekening.kd_rek=? and rekening.level='1' and rekening.balance like ? order by rekening.kd_rek");
                                                                                    try {
                                                                                        ps10.setString(1,rs9.getString(1));
                                                                                        ps10.setString(2,"%"+TCari.getText().trim()+"%");
                                                                                        ps10.setString(3,rs9.getString(1));
                                                                                        ps10.setString(4,"%"+TCari.getText().trim()+"%");
                                                                                        ps10.setString(5,rs9.getString(1));
                                                                                        ps10.setString(6,"%"+TCari.getText().trim()+"%");
                                                                                        ps10.setString(7,rs9.getString(1));
                                                                                        ps10.setString(8,"%"+TCari.getText().trim()+"%");
                                                                                        rs10=ps10.executeQuery();
                                                                                        while(rs10.next()){
                                                                                            tabMode.addRow(new Object[]{
                                                                                                rs10.getString(1),rs10.getString(2),"         "+rs10.getString(1),"         "+rs10.getString(2),rs10.getString(3),rs10.getString(4)
                                                                                            });
                                                                                            ps11=koneksi.prepareStatement("select rekening.kd_rek, rekening.nm_rek, rekening.tipe, rekening.balance "+
                                                                                                " from rekening inner join subrekening on rekening.kd_rek=subrekening.kd_rek2 "+
                                                                                                " where subrekening.kd_rek=? and rekening.level='1' and rekening.kd_rek like ? or "+
                                                                                                " subrekening.kd_rek=? and rekening.level='1' and rekening.nm_rek like ? or "+
                                                                                                " subrekening.kd_rek=? and rekening.level='1' and rekening.tipe like ? or "+
                                                                                                " subrekening.kd_rek=? and rekening.level='1' and rekening.balance like ? order by rekening.kd_rek");
                                                                                            try {
                                                                                                ps11.setString(1,rs10.getString(1));
                                                                                                ps11.setString(2,"%"+TCari.getText().trim()+"%");
                                                                                                ps11.setString(3,rs10.getString(1));
                                                                                                ps11.setString(4,"%"+TCari.getText().trim()+"%");
                                                                                                ps11.setString(5,rs10.getString(1));
                                                                                                ps11.setString(6,"%"+TCari.getText().trim()+"%");
                                                                                                ps11.setString(7,rs10.getString(1));
                                                                                                ps11.setString(8,"%"+TCari.getText().trim()+"%");
                                                                                                rs11=ps11.executeQuery();
                                                                                                while(rs11.next()){
                                                                                                    tabMode.addRow(new Object[]{
                                                                                                        rs11.getString(1),rs11.getString(2),"          "+rs11.getString(1),"          "+rs11.getString(2),rs11.getString(3),rs11.getString(4)
                                                                                                    });
                                                                                                    ps12=koneksi.prepareStatement("select rekening.kd_rek, rekening.nm_rek, rekening.tipe, rekening.balance "+
                                                                                                        " from rekening inner join subrekening on rekening.kd_rek=subrekening.kd_rek2 "+
                                                                                                        " where subrekening.kd_rek=? and rekening.level='1' and rekening.kd_rek like ? or "+
                                                                                                        " subrekening.kd_rek=? and rekening.level='1' and rekening.nm_rek like ? or "+
                                                                                                        " subrekening.kd_rek=? and rekening.level='1' and rekening.tipe like ? or "+
                                                                                                        " subrekening.kd_rek=? and rekening.level='1' and rekening.balance like ? order by rekening.kd_rek");
                                                                                                    try {
                                                                                                        ps12.setString(1,rs11.getString(1));
                                                                                                        ps12.setString(2,"%"+TCari.getText().trim()+"%");
                                                                                                        ps12.setString(3,rs11.getString(1));
                                                                                                        ps12.setString(4,"%"+TCari.getText().trim()+"%");
                                                                                                        ps12.setString(5,rs11.getString(1));
                                                                                                        ps12.setString(6,"%"+TCari.getText().trim()+"%");
                                                                                                        ps12.setString(7,rs11.getString(1));
                                                                                                        ps12.setString(8,"%"+TCari.getText().trim()+"%");
                                                                                                        rs12=ps12.executeQuery();
                                                                                                        while(rs12.next()){
                                                                                                            tabMode.addRow(new Object[]{
                                                                                                                rs12.getString(1),rs12.getString(2),"           "+rs12.getString(1),"           "+rs12.getString(2),rs12.getString(3),rs12.getString(4)
                                                                                                            });
                                                                                                            ps13=koneksi.prepareStatement("select rekening.kd_rek, rekening.nm_rek, rekening.tipe, rekening.balance "+
                                                                                                                " from rekening inner join subrekening on rekening.kd_rek=subrekening.kd_rek2 "+
                                                                                                                " where subrekening.kd_rek=? and rekening.level='1' and rekening.kd_rek like ? or "+
                                                                                                                " subrekening.kd_rek=? and rekening.level='1' and rekening.nm_rek like ? or "+
                                                                                                                " subrekening.kd_rek=? and rekening.level='1' and rekening.tipe like ? or "+
                                                                                                                " subrekening.kd_rek=? and rekening.level='1' and rekening.balance like ? order by rekening.kd_rek");
                                                                                                            try {
                                                                                                                ps13.setString(1,rs12.getString(1));
                                                                                                                ps13.setString(2,"%"+TCari.getText().trim()+"%");
                                                                                                                ps13.setString(3,rs12.getString(1));
                                                                                                                ps13.setString(4,"%"+TCari.getText().trim()+"%");
                                                                                                                ps13.setString(5,rs12.getString(1));
                                                                                                                ps13.setString(6,"%"+TCari.getText().trim()+"%");
                                                                                                                ps13.setString(7,rs12.getString(1));
                                                                                                                ps13.setString(8,"%"+TCari.getText().trim()+"%");
                                                                                                                rs13=ps13.executeQuery();
                                                                                                                while(rs13.next()){
                                                                                                                    tabMode.addRow(new Object[]{
                                                                                                                        rs13.getString(1),rs13.getString(2),"            "+rs13.getString(1),"            "+rs13.getString(2),rs13.getString(3),rs13.getString(4)
                                                                                                                    });

                                                                                                                }
                                                                                                            } catch (Exception e) {
                                                                                                                System.out.println("Notif 2 : "+e);
                                                                                                            } finally{
                                                                                                                if(rs13!=null){
                                                                                                                    rs13.close();
                                                                                                                }
                                                                                                                if(ps13!=null){
                                                                                                                    ps13.close();
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    } catch (Exception e) {
                                                                                                        System.out.println("Notif 2 : "+e);
                                                                                                    } finally{
                                                                                                        if(rs12!=null){
                                                                                                            rs12.close();
                                                                                                        }
                                                                                                        if(ps12!=null){
                                                                                                            ps12.close();
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            } catch (Exception e) {
                                                                                                System.out.println("Notif 2 : "+e);
                                                                                            } finally{
                                                                                                if(rs11!=null){
                                                                                                    rs11.close();
                                                                                                }
                                                                                                if(ps11!=null){
                                                                                                    ps11.close();
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    } catch (Exception e) {
                                                                                        System.out.println("Notif 2 : "+e);
                                                                                    } finally{
                                                                                        if(rs10!=null){
                                                                                            rs10.close();
                                                                                        }
                                                                                        if(ps10!=null){
                                                                                            ps10.close();
                                                                                        }
                                                                                    }
                                                                                }
                                                                            } catch (Exception e) {
                                                                                System.out.println("Notif 2 : "+e);
                                                                            } finally{
                                                                                if(rs9!=null){
                                                                                    rs9.close();
                                                                                }
                                                                                if(ps9!=null){
                                                                                    ps9.close();
                                                                                }
                                                                            }
                                                                        }
                                                                    } catch (Exception e) {
                                                                        System.out.println("Notif 2 : "+e);
                                                                    } finally{
                                                                        if(rs8!=null){
                                                                            rs8.close();
                                                                        }
                                                                        if(ps8!=null){
                                                                            ps8.close();
                                                                        }
                                                                    }
                                                                }
                                                            } catch (Exception e) {
                                                                System.out.println("Notif 2 : "+e);
                                                            } finally{
                                                                if(rs7!=null){
                                                                    rs7.close();
                                                                }
                                                                if(ps7!=null){
                                                                    ps7.close();
                                                                }
                                                            }                                                            
                                                        }
                                                    } catch (Exception e) {
                                                        System.out.println("Notif 2 : "+e);
                                                    } finally{
                                                        if(rs6!=null){
                                                            rs6.close();
                                                        }
                                                        if(ps6!=null){
                                                            ps6.close();
                                                        }
                                                    }
                                                }
                                            } catch (Exception e) {
                                                System.out.println("Notif 2 : "+e);
                                            } finally{
                                                if(rs5!=null){
                                                    rs5.close();
                                                }
                                                if(ps5!=null){
                                                    ps5.close();
                                                }
                                            }
                                        }
                                    } catch (Exception e) {
                                        System.out.println("Notif 2 : "+e);
                                    } finally{
                                        if(rs4!=null){
                                            rs4.close();
                                        }
                                        if(ps4!=null){
                                            ps4.close();
                                        }
                                    }
                                }
                            } catch (Exception e) {
                                System.out.println("Notif 2 : "+e);
                            } finally{
                                if(rs3!=null){
                                    rs3.close();
                                }
                                if(ps3!=null){
                                    ps3.close();
                                }
                            }
                        }
                    } catch (Exception e) {
                        System.out.println("Notif 2 : "+e);
                    } finally{
                        if(rs2!=null){
                            rs2.close();
                        }
                        if(ps2!=null){
                            ps2.close();
                        }
                    }
                }
            } catch (Exception e) {
                System.out.println("Notif 1 : "+e);
            } finally{
                if(rs!=null){
                    rs.close();
                }
                if(ps!=null){
                    ps.close();
                }
            }
        }catch(Exception e){
            System.out.println("Notifikasi : "+e);
        }
        LCount.setText(""+tabMode.getRowCount());
    }
    
    public void tampil2() {
        Valid.tabelKosong(tabMode);
        try{
            ps=koneksi.prepareStatement("select kd_rek, nm_rek, tipe, balance "+
                    " from rekening where kd_rek like ? or "+
                    " nm_rek like ? or "+
                    " tipe like ? or "+
                    " balance like ? order by kd_rek");
            try {            
                ps.setString(1,"%"+TCari.getText().trim()+"%");
                ps.setString(2,"%"+TCari.getText().trim()+"%");
                ps.setString(3,"%"+TCari.getText().trim()+"%");
                ps.setString(4,"%"+TCari.getText().trim()+"%");
                rs=ps.executeQuery();
                while(rs.next()){
                    tabMode.addRow(new Object[]{
                        rs.getString(1),rs.getString(2),rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)
                    });                    
                }
            } catch (Exception e) {
                System.out.println("Notif 1 : "+e);
            } finally{
                if(rs!=null){
                    rs.close();
                }
                if(ps!=null){
                    ps.close();
                }
            }
        }catch(Exception e){
            System.out.println("Notifikasi : "+e);
        }
        LCount.setText(""+tabMode.getRowCount());
    }

    public void emptTeks() {
        Kd.setText("");
        Kd2.setText("");
        Nm.setText("");
        Tipe.setSelectedIndex(0);
        Balan.setSelectedIndex(0);
        Kd.requestFocus();        
    }
    
    public void emptTeks2() {
        KdSub.setText(Kd.getText());
        NmSub.setText("");
        Tipe1.setSelectedIndex(0);
        Balan1.setSelectedIndex(0);
        KdSub.requestFocus();        
    }

    private void getData() {
        int row=tbKamar.getSelectedRow();
        if(row!= -1){
            Kd.setText(tbKamar.getValueAt(row,0).toString());
            Kd2.setText(tbKamar.getValueAt(row,0).toString());
            Nm.setText(tbKamar.getValueAt(row,1).toString());
            switch (tbKamar.getValueAt(row,4).toString()) {
                case "N":
                    Tipe.setSelectedIndex(0);
                    break;
                case "R":
                    Tipe.setSelectedIndex(1);
                    break;
                case "M":
                    Tipe.setSelectedIndex(2);
                    break;
            }
            
            switch (tbKamar.getValueAt(row,5).toString()) {
                case "D":
                    Balan.setSelectedIndex(0);
                    break;
                case "K":
                    Balan.setSelectedIndex(1);
                    break;
            }
            
        }
    }

    public JTextField getTextField(){
        return Kd;
    }

    public JTable getTabel(){
        return tbKamar;
    }
    
    public void isCek(){
        BtnSimpan.setEnabled(akses.getakun_rekening());
        BtnBatal.setEnabled(akses.getakun_rekening());
        BtnEdit.setEnabled(akses.getakun_rekening());
        BtnHapus.setEnabled(akses.getakun_rekening());
        BtnPrint.setEnabled(akses.getakun_rekening());
    }
        
}
